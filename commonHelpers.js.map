{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nconst refs = {\n  inputEl: document.querySelector('#datetime-picker'),\n  btnEl: document.querySelector('[data-start]'),\n  daysEl: document.querySelector('[data-days]'),\n  hoursEl: document.querySelector('[data-hours]'),\n  minutesEl: document.querySelector('[data-minutes]'),\n  secondsEl: document.querySelector('[data-seconds]'),\n};\nconst { inputEl, btnEl, daysEl, hoursEl, minutesEl, secondsEl } = refs;\n\nlet userSelectedDate;\nlet intervalId;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate < new Date()) {\n      window.alert('Please choose a date in the future');\n      btnEl.disabled = true;\n    } else if (userSelectedDate > new Date()) {\n      btnEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nbtnEl.addEventListener('click', () => {\n  if (intervalId) clearInterval(intervalId);\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const diff = userSelectedDate - currentTime;\n    convertMs(diff);\n  }, 1000);\n  btnEl.disabled = true;\n  inputEl.disabled = true;\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  daysEl.textContent = days.toString().padStart(2, '0');\n  hoursEl.textContent = hours.toString().padStart(2, '0');\n  minutesEl.textContent = minutes.toString().padStart(2, '0');\n  secondsEl.textContent = seconds.toString().padStart(2, '0');\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","inputEl","btnEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalId","options","selectedDates","flatpickr","currentTime","diff","convertMs","ms","days","hours","minutes","seconds"],"mappings":"oGAGA,MAAMA,EAAO,CACX,QAAS,SAAS,cAAc,kBAAkB,EAClD,MAAO,SAAS,cAAc,cAAc,EAC5C,OAAQ,SAAS,cAAc,aAAa,EAC5C,QAAS,SAAS,cAAc,cAAc,EAC9C,UAAW,SAAS,cAAc,gBAAgB,EAClD,UAAW,SAAS,cAAc,gBAAgB,CACpD,EACM,CAAE,QAAAC,EAAS,MAAAC,EAAO,OAAAC,EAAQ,QAAAC,EAAS,UAAAC,EAAW,UAAAC,CAAW,EAAGN,EAElE,IAAIO,EACAC,EAEJ,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,EAAmB,IAAI,MACzB,OAAO,MAAM,oCAAoC,EACjDL,EAAM,SAAW,IACRK,EAAmB,IAAI,OAChCL,EAAM,SAAW,GAEpB,CACH,EAEAS,EAAUV,EAASQ,CAAO,EAE1BP,EAAM,iBAAiB,QAAS,IAAM,CAChCM,GAAY,cAAcA,CAAU,EACxCA,EAAa,YAAY,IAAM,CAC7B,MAAMI,EAAc,KAAK,MACnBC,EAAON,EAAmBK,EAChCE,EAAUD,CAAI,CACf,EAAE,GAAI,EACPX,EAAM,SAAW,GACjBD,EAAQ,SAAW,EACrB,CAAC,EAED,SAASa,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,OAAAZ,EAAO,YAAca,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACpDZ,EAAQ,YAAca,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EACtDZ,EAAU,YAAca,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC1DZ,EAAU,YAAca,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAEnD,CAAE,KAAAH,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}